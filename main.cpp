#include <iostream> //стандартная библиотека ввода-вывода
using namespace std; //простанство имен std

//1. Написать функцию, которая возвращает куб числа.
double cub(double a) //оглашение функции возведения первого числа в куб и нужного ей параметра
{
	return a * a * a; //возвращения куба числа
}

//2. Написать функцию для нахождения наибольшего из двух чисел.
void more(double a, double b) //оглашение функции нахождения наибольшего из двух чисел и нужных ей параметров
{
	setlocale(0, "ru"); //локализация кирилицы в коде программы
	if (a > b) //если первое число больше второго
	{
		cout << a << " - наибольшее из двух чисел.\n"; //вывести сообщение о большем зачении первого числа
	}
	else if (a == b) //если числа равны между собой
	{
		cout << "Два числа равны между собой.\n"; //вывести сообщение о равенсте чисел
	}
	else //в остальном случае (второе число больше второго)
	{
		cout << b << " - наибольшее из двух чисел.\n"; //вывести сообщение о большем зачении второго числа
	}
}

/*3. Написать функцию, которая возвращает истину, если передаваемое значение положительное и ложь,
если отрицательное.*/
bool true_false(double a)
//оглашение функции определения положительности или отрицательности первого числа и нужного ей параметра
{
	if (a > 0) //если число положительное
	{
		return true; //функция возвращает значение истины
	}
	else if (a < 0) //если число отрицательное
	{
		return false; //функция возвращает значение лжи
	}
}

/*4. Написать функцию, которая в зависимости от выбора пользователя вызывает функции сложения,
произведения, вычитания, деления двух чисел (эти функции тоже нужно написать самостоятельно).*/
void Plus(double a, double b) //оглашение функции расчета суммы двух чисел и нужных ей параметров
{
	cout << "Сумма = " << a + b; //вывод суммы двух чисел
}
void Minus(double a, double b) //оглашение функции расчета разницы двух чисел и нужных ей параметров
{
	cout << "Разница = " << a - b; //вывод разницы двух чисел
}
void multiply(double a, double b) //оглашение функции умножения двух чисел и нужных ей параметров
{
	cout << "Умножение = " << a * b; //вывод результата умножения двух чисел
}
void divide(double a, double b) //оглашение функция деления двух чисел и нужных ей параметров
{
	cout << "Деление =" << a / b; //вывод результата деления двух чисел
}
void math_choice(double a, double b)
//оглашение функции выбора математической операции над двумя числами и нужных ей параметров
{
	setlocale(0, "ru"); //локализация кирилицы в коде программы
	int choice; //оглашение переменной номера арифметической операции
	cout << "\nВыберите арифметическую операцию: прибавление (1), вычитание (2), умножение (3), деление (4). ";
	cin >> choice; //ввод номера арифметической операции
	switch (choice) //набор арифметических операций на выбор в заивисимости от значения choice
	{
	case 1: //ариф. операция №1 - прибавление
		Plus(a, b); //призыв функции расчета суммы двух чисел
		break; //выход из switch
	case 2: //ариф. операция №2 - вычитание
		Minus(a, b); //призыв функции расчета разницы двух чисел
		break; //выход из switch
	case 3: //ариф. операция №3 - умножение
		multiply(a, b); //призыв функции умножения двух чисел
		break; //выход из switch
	case 4: //ариф. операция №4 - деление
		divide(a, b); //призыв функции деления двух чисел
		break; //выход из switch
	default: //если значения переменной choice не подходит тем, что перечислены выше
		cout << "Некорректный номер операции."; //вывод сообщения о некорректности номера арифметической операции
	}
}

//5. Написать функцию, выводящую на экран прямоугольник с высотой N и шириной K.
void rectangle(int n, int k) //оглашение функции вывода прямоугольника с параметрами его высоты и ширины
{
	for (int i = 0; i < n; i++) //цикл работы с высотой прямоугольника
	{
		for (int j = 0; j < k; j++) // цикл работы с шириной прямоугольника
		{
			if (i == 0 || i == n - 1 || j == 0 || j == k - 1) //условия для вывода сторон прямоугольника
			{
				cout << "*"; //вывод звёздочки при истинности условий выше
			}
			else //если хотя бы одно из условий не соблюдено
			{
				cout << " "; //вывод пробела
			}
		}
		cout << endl; //переход на новую строку
	}
}

/*6. Написать функцию, которая проверяет, является ли переданное ей число простым? Число называется простым,
если оно делится без остатка только на себя и на единицу.*/
bool plain(int b) //оглашение функции определения простого числа (второго) с нужным ей параметром
{
	if (b == 0 || b == 1) //какие числа по умолчанию не могут быть простыми 
	{
		return false; //возвращение значения лжи
	}
	else if (b > 0) //если число может быть простым, выполнять последующие действия
	{
		for (int i = 2; i < b; i++) //цикл поиска других делителей числа, помимо 1 и себя самого
		{
			if (b % i == 0) //если у числа есть делитель, помимо 1 и себя самого
			{
				return false; //возвращение значения лжи
			}
		}
	}
	return true; //возвращение значения истины при прохождении всех условий выше и неполучения значения лжи
}

//7. Написать функцию, вычисляющую факториал переданного ей числа.
void factorial(int b) //оглашение функции нахождения факториала второго числа и нужного ей параметра
{
 setlocale(0, "ru"); //локализация кирилицы в коде программы
 int factorial = 1; //оглашение переменной факториала
 if (b == 0) //если число = 0
 {
	 cout << " = " << factorial; //вывод факториала
 }
 else if (b < 0) //если число отрицательное
 {
	 cout << "не существует. "; //вывод сообщения о несуществовании факториала числа
 }
 else //если же число положительное
 {
	 for (int i = 1; i <= b; i++) //цикл расчета факториала
	 {
		 factorial *= i; //расчет факториала путем умножения
	 }
	 cout << " = " << factorial; //вывод факториала числа
 }
}

/*8. Написать функцию, которая принимает два параметра: основание степени и показатель степени, и вычисляет
степень числа на основе полученных данных.*/
double degree(double a, double b) //оглашение функции возведения числа в степень и нужных ей параметров
{
	return pow(a, b); //возвращение значения числа, возведенного в степень
}

/*9. Написать функцию, которая получает в качестве параметров 2 целых числа и возвращает сумму чисел из
диапазона между ними.*/
int diapazon_sum(int a, int b) //оглашение функции нахождения суммы диапазона между двумя числами (параметрами)
{
	int n1, n2, s = 0; //оглашение переменных начала и конца диапазона, суммы чисел между ними
	if (a == b) //если числа равны между собой
	{
		return 0; //возвращение нулевого значения
	}
	else if (a > b) //если первое число больше второго
	{
		n1 = b; //второе число становится началом диапазона
		n2 = a; //первое число становится концом диапазона
	}
	else //если первое число меньше второго
	{
		n1 = a; //первое число становится началом диапазона
		n2 = b; //второе число становится концом диапазона
	}
	for (int i = n1 + 1; i < n2; i++) //цикл расчета суммы диапазона между 2-мя числами
	{
		s += i; //расчет суммы путем прибавления
	}
	return s; //возвращение значения суммы диапазона между 2-мя числами
}

/*10. Число называется совершенным, если сумма всех его делителей равна ему самому.
Напишите функцию поиска таких чисел во введенном интервале.*/
bool perfect_num(int a) //оглашение функции определения совершенного числа (первого) с нужным ей параметром
{
	int sum = 0; //оглашение переменной суммы делителей числа
	for (int i = 1; i < a; i++) //цикл нахождения делителей числа и их суммы
	{
		if (a % i == 0) //если у числа есть делитель
		{
			sum += i; //прибавить его к сумме
		}
	}
	if (sum == a) //если число равно сумме стоих делителей
	{
		return true; //возвращение значения истины
	}
	else //если же число не равно сумме стоих делителей
	{
		return false; //возвращение значения лжи
	}
}

//11. Написать функцию, проверяющую является ли переданный ей параметр алфавитно-цифровым.
bool alpha_num(char a)
//оглашение функции проверки параметра на то, является ли он алфавитно-цифровым
{
	if (isalpha(a) || isdigit(a)) //если символ является алфавитно-цифровым
	{
		return true; //возвращение значения истины
	}
	else //если же символ не оказался алфавитно-цифровым
	{
		return false; //возвращение значения лжи
	}
}

//12. Написать функцию, которая определяет, является ли «счастливым» шестизначное число.
void lucky_number(int number) //оглашение функции определення счастливого шестизначного числа
{
	if (number < 100000 || number > 999999) //условия некорректности числа
	{
		cout << "Вы ввели некорректное число. "; //вывод сообщения о некорректности числа
		return; //вывод их функции
	}
	int left_half, right_half, s1 = 0, s2 = 0;
	//оглашение переменных левой и правой половины числа, сумм цифр каждой из них
	left_half = number / 1000; //левая половина числа
	right_half = number % 1000; //правая половина числа
	for (int i = 1; i < 4; i++) //цикл для расчета суммы цифр левой половины числа
	{
		s1 += left_half % 10; //расчет первой с конца цифры левой половины и добавление ее к сумме ЛП
		left_half /= 10; //деление на 10, чтоб в дальнейшем расчитать следующую с конца цифру половины числа
	}
	for (int i = 1; i < 4; i++) //цикл для расчета суммы цифр правой половины числа
	{
		s2 += right_half % 10; //расчет первой с конца цифры правой половины и добавление ее к сумме ПП
		right_half /= 10; //деление на 10, чтоб в дальнейшем расчитать следующую с конца цифру половины числа
	}
	if (s1 == s2) //условие счастливого числа (суммы цифр левой и правой половин числа равны)
	{
		cout << "Поздравляем! У вас счастливое число."; //вывод сообщения о счастливом числе
	}
	else //если суммы цифр левой и правой половин числа не равны
	{
		cout << "У вас обычное число."; //вывод сообщения об обычном числе
	}
}

//13. Необходимо написать функцию, которая определяет, является ли год високосным.
void leap_year(int year) //оглашение функции определения высокосного года
{
	if (year % 4 == 0 && year % 100 != 0) //условия высокосности года
	{
		cout << "Год является высокосным. "; //вывод сообщения о том, что год является высокосным
	}
	else if (year % 4 != 0) //условия невысокосности года
	{
		cout << "Год является обычным. "; //вывод сообщения о том, что год является обычным
	}
}

//-----------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------

int main() //главная функция, выполняющая программу, ее точка старта
{
	setlocale(0, "ru"); //локализация кирилицы в коде программы
	double a, b; //оглашение переменных двух чисел
	cout << "Введите 2 числа: ";
	cin >> a >> b; //ввод двух чисел
	
	cout << "Куб первого числа = " << cub(a) << "\n";//вывод куба первого числа через вызов соответствующей функции
	
	more(a, b); //вызов функции определения какое из двух чисел больше другого
	
	true_false(a); //вызов функции определения положительности или отрицательности первого числа
	if (a == 0) //если число нулевое
	{
		cout << "Первое число нулевое. "; //вывод сообщения о том, что число нулевое
	}
	else if (true_false(a)) //если функция выводит значение истины
	{
		cout << "Первое число положительное. "; //вывод сообщения о положительности числа
	}
	else //если же функция выводит значение лжи
	{
		cout << "Первое число отрицательное. "; //вывод сообщения об отрицательности числа
	}
	
	math_choice(a, b); //вызов функции выбора математической операции над двумя числами
	
	cout << "\nВведите высоту N и ширину K прямоугольника: ";
	int n, k; //оглашение переменных высоты и ширины прямоугольника
	cin >> n >> k; //ввод высоты и ширины прямоугольника
	rectangle(n, k); //вызов функции вывода прямоугольника
	
	plain(b); //вызов функции определения простого числа
	if (b < 0) //если второе число отрицательное
	{
		cout << "Отрицательные числа (второе) не могут быть простыми. ";
		//вывод сообщения о том, что отрицательные числа не могут быть простыми
	}
	else if (plain(b)) //если функция возвращает значение истины
	{
		cout << "Второе число является простым. "; //вывод сообщения о простоте числа
	}
	else //если же функция возвращает значение лжи
	{
		cout << "Второе число не является простым. "; //вывод сообщения о непростоте числа
	}

	cout << "\nФакториал второго числа (его целой части)";
	factorial(b); //вызов функции нахождения факториала второго числа

	cout << "\nВведите число и степень, в которую хотите его возвести: ";
	double number, stepen; //оглашение переменных числа и степени, в которую оно возводится
	cin >> number >> stepen; //ввод числа и степени, в которую оно возводится
	cout << "Число " << number << ", возведенное в степень " << stepen << " = " << degree(number, stepen);
	//вывод значения числа, возведеного в степень, путем вызова соответствующей функции

	cout << "\nСумма целых чисел между числами " << a << " и " << b << " = " << diapazon_sum(a, b);
	//вывод суммы диапазона между двумя числами путем вызова соответствующей функции

	if (a < 0) //если первое число отрицательное
	{
		cout << "\nОтрицательные числа (первое) не могут быть совершенными. ";
		//вывод сообщения о том, что отрицательные числа  не могут быть совершенными
	}
	else if (perfect_num(a)) //если функция возвращает значение истины
	{
		cout << "\nПервое число совершенно. "; //вывод сообщения о совершенности числа
	}
	else //если же функция возвращает значение лжи
	{
		cout << "\nПервое число обычное. "; //вывод сообщения об обычности числа
	}

	cout << "\nВведите символ: ";
	char symbol; //оглашение переменной символа
	cin >> symbol; //ввод символа
	if (alpha_num(symbol)) //если функция возвращает значение истины
	{
		cout << "Символ является алфавитно-цифровым. ";
		//вывод сообщения о том, что символ является алфавитно-цифровым
	}
	else //если же функция возвращает значение лжи
	{
		cout << "Символ не является алфавитно-цифровым. ";
		//вывод сообщения о том, что символ не является алфавитно-цифровым
	}

	cout << "Введите шестизначное число: ";
	int num; //оглашение переменной шестизначного числа
	cin >> num; //ввод шестизначного числа
	lucky_number(number); //вызов функции определення счастливого числа

	int year; //оглашение переменной года
	cout << "\nВведите год: ";
	cin >> year; //ввод года
	if (year < 1) //условия несуществующего года
	{
		cout << "Такого года не существует. "; //вывод сообщения о том, что такого года не существует
	}
	else //если же год существует
	{
		leap_year(year); //вызов функции определения высокосного года
	}
}